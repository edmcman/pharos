# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

jobs:
# This isn't working anyway
# - job: Build
#   timeoutInMinutes: 660
#   pool:
#     vmImage: 'Ubuntu-16.04'
#   steps:
#   - script: sudo apt-get -y update
#   - script: sudo apt-get -y install sudo build-essential wget flex ghostscript bzip2 git subversion automake libtool bison python libncurses-dev vim-common sqlite3 libsqlite3-0 libsqlite3-dev zlib1g-dev cmake libyaml-cpp-dev libboost-all-dev libboost-dev libxml2-dev ninja-build
#   - script: NCPU=2 ./scripts/build_prereqs.bash -reclaim
#   - script: NCPU=2 ./scripts/build.bash -reclaim

- job: Build_OOAnalyzer_Ghidra_Plugin
  pool:
    vmImage: 'Ubuntu-18.04'
  steps:
  # - task: DownloadGitHubRelease@0
  #   inputs:
  #     connection: Github read only
  #     userRepository: NationalSecurityAgency/ghidra
  #     defaultVersionType: 'latest' # Options: latest, specificVersion, specificTag
  #     version: '*'
      #version: 'Ghidra_9.1.2_build' # Required when defaultVersionType != Latest
      #itemPattern: '**' # Optional
      #downloadPath: '$(System.ArtifactsDirectory)'
  - script: wget https://github.com/NationalSecurityAgency/ghidra/archive/Ghidra_9.1.2_build.tar.gz
  - script: tar -xvzf Ghidra_9.1.2_build.tar.gz
  - script: PWD=$PWD; cd tools/ooanalyzer/ghidra/OOAnalyzerPlugin && GHIDRA_INSTALL_DIR=$(PWD)/ghidra-Ghidra_9.1.2_build/ ./gradlew
