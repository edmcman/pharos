# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

jobs:
# This isn't working anyway
# - job: Build
#   timeoutInMinutes: 660
#   pool:
#     vmImage: 'Ubuntu-16.04'
#   steps:
#   - script: sudo apt-get -y update
#   - script: sudo apt-get -y install sudo build-essential wget flex ghostscript bzip2 git subversion automake libtool bison python libncurses-dev vim-common sqlite3 libsqlite3-0 libsqlite3-dev zlib1g-dev cmake libyaml-cpp-dev libboost-all-dev libboost-dev libxml2-dev ninja-build
#   - script: NCPU=2 ./scripts/build_prereqs.bash -reclaim
#   - script: NCPU=2 ./scripts/build.bash -reclaim

- job: Build_OOAnalyzer_Ghidra_Plugin
  strategy:
    matrix:
      ghidra912:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1.2_PUBLIC_20200212.zip"
      ghidra911:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1.1_PUBLIC_20191218.zip"
      ghidra91:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.1_PUBLIC_20191023.zip"
      ghidra904:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.0.4_PUBLIC_20190516.zip"
      ghidra902:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.0.2_PUBLIC_20190403.zip"
      ghidra901:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.0.1_PUBLIC_20190325.zip"
      ghidra90:
        ghidraUrl: "https://ghidra-sre.org/ghidra_9.0_PUBLIC_20190228.zip"
  pool:
    vmImage: 'Ubuntu-18.04'
  steps:
  # - task: DownloadGitHubRelease@0
  #   inputs:
  #     connection: Github read only
  #     userRepository: NationalSecurityAgency/ghidra
  #     defaultVersionType: 'latest' # Options: latest, specificVersion, specificTag
  #     version: '*'
      #version: 'Ghidra_9.1.2_build' # Required when defaultVersionType != Latest
      #itemPattern: '**' # Optional
      #downloadPath: '$(System.ArtifactsDirectory)'
  - script: sudo update-alternatives --set javac /usr/lib/jvm/zulu-11-azure-amd64/bin/javac && sudo update-alternatives --set java /usr/lib/jvm/zulu-11-azure-amd64/bin/java && export JAVA_HOME=/usr/lib/jvm/zulu-11-azure-amd64
  - script: wget $URL # https://ghidra-sre.org/ghidra_9.1.2_PUBLIC_20200212.zip
    env:
      URL: $(ghidraUrl)
  - script: unzip *.zip
  - script: OLDPWD=$PWD; cd tools/ooanalyzer/ghidra/OOAnalyzerPlugin && GHIDRA_INSTALL_DIR=$(find $OLDPWD -type d -name 'ghidra_*') ./gradlew
    env:
      JAVA_HOME: /usr/lib/jvm/zulu-11-azure-amd64
  - publish: tools/ooanalyzer/ghidra/OOAnalyzerPlugin/dist/
    artifact: OOAnalyzerPlugin

